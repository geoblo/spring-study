<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 스프링 MVC 관련 설정들 작성 -->

    <!-- 스프링 MVC 설정을 어노테이션 기반으로 처리한다는 의미 + 스프링 MVC의 여러 객체들을 자동으로 스프링의 빈(Bean)으로 등록하게 하는 기능 -->
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

    <!-- webapp 폴더 아래에 'resources' 폴더 - 나중에 정적 파일들(html, css, js, 이미지 등)을 서비스 하기 위한 경로 -->
    <!-- 정적인 파일의 경로를 지정 -->
    <!-- '/resources' 경로로 들어오는 요청은 정적 파일을 요구하는 것이라고 생각하고 스프링 MVC에서 처리하지 않는다는 의미 -->
    <!-- location 속성 값은 webapp 폴더에 만들어둔 폴더를 의미 -->
    <mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>

    <!-- InternalResourceViewResolver는 스프링 MVC에서 제공하는 뷰(view)를 어떻게 결정하는지에 대한 설정을 담당 -->
    <!-- prefix와 suffix를 통해서 예전에는 직접 '/WEB-INF/....jsp'와 같은 설정을 생략할 수 있음 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 해당 패키지를 조사해서 클래스의 어노테이션들을 이용하는 설정 -->
    <!-- @Controller, @Service, @Repository, @Component -->
    <!-- 해당 패키지를 스캔해서 어노테이션이 추가된 클래스들의 객체들을 스프링의 빈(Bean)으로 설정되게 만듦 -->
    <context:component-scan base-package="org.zerock.springex.controller" />

    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="org.zerock.springex.controller.fommater.LocalDateFormatter" />
            </set>
        </property>
    </bean>
</beans>